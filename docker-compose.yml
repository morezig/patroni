# docker compose file for running a 3-node PostgreSQL cluster
# with 3-node etcd cluster as the DCS and one haproxy node
#
# requires a patroni image build from the Dockerfile:
# $ docker build -t patroni .
# The cluster could be started as:
# $ docker-compose up -d
# You can read more about it in the:
# https://github.com/zalando/patroni/blob/master/docker/README.md
version: "2"

networks:
    demo:
        driver: bridge
        ipam:
            config:
                - subnet: 172.20.0.0/24

services:
    etcd1: &etcd
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: 
            demo:
                ipv4_address: 172.20.0.2
        environment:
            ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
            ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
            ETCD_INITIAL_CLUSTER: etcd1=http://172.20.0.2:2380,etcd2=http://172.20.0.3:2380,etcd3=http://172.20.0.4:2380
            ETCD_INITIAL_CLUSTER_STATE: new
            ETCD_INITIAL_CLUSTER_TOKEN: tutorial
            ETCD_UNSUPPORTED_ARCH: arm64
        container_name: demo-etcd1
        hostname: etcd1
        command: etcd -name etcd1 -initial-advertise-peer-urls http://172.20.0.2:2380
        
    etcd2:
        <<: *etcd
        networks: 
            demo:
                ipv4_address: 172.20.0.3
        container_name: demo-etcd2
        hostname: etcd2
        command: etcd -name etcd2 -initial-advertise-peer-urls http://172.20.0.3:2380
        depends_on:
            - etcd1

    etcd3:
        <<: *etcd
        networks: 
            demo:
                ipv4_address: 172.20.0.4
        container_name: demo-etcd3
        hostname: etcd3
        command: etcd -name etcd3 -initial-advertise-peer-urls http://172.20.0.4:2380
        depends_on:
            - etcd2

    haproxy:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: 
            demo:
                ipv4_address: 172.20.0.5
        env_file: docker/patroni.env
        hostname: haproxy
        container_name: demo-haproxy
        ports:
            - "5000:5000"
            - "5001:5001"
        command: haproxy
        environment: &haproxy_env
            ETCDCTL_ENDPOINTS: http://172.20.0.2:2379,http://172.20.0.3:2379,http://172.20.0.4:2379
            PATRONI_ETCD3_HOSTS: "'172.20.0.2:2379','172.20.0.3:2379','172.20.0.4:2379'"
            PATRONI_SCOPE: demo
        depends_on:
            - etcd3

    patroni1:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: 
            demo:
                ipv4_address: 172.20.0.6
        env_file: docker/patroni.env
        hostname: patroni1
        container_name: demo-patroni1
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni1
        depends_on:
            - haproxy

    patroni2:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: 
            demo:
                ipv4_address: 172.20.0.7
        env_file: docker/patroni.env
        hostname: patroni2
        container_name: demo-patroni2
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni2
        depends_on:
            - patroni1

    patroni3:
        image: ${PATRONI_TEST_IMAGE:-patroni}
        networks: 
            demo:
                ipv4_address: 172.20.0.8
        env_file: docker/patroni.env
        hostname: patroni3
        container_name: demo-patroni3
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni3
        depends_on:
            - patroni2